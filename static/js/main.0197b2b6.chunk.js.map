{"version":3,"sources":["loginUtil.js","components/SearchBar.js","states/repository.js","layout/TopBar.js","layout/Sidebar.js","page/PageWrapper.js","card/CollapsableBigCard.js","card/ChatDownloaderCard.js","card/FollowerlistDownloaderCard.js","layout/ContentRow.js","page/DownloaderPage.js","layout/Footer.js","card/StreamInfoCard.js","card/TopChatterChartCard.js","util/timeUtil.js","card/ChatCountTimeSeriesCard.js","card/TopEmotesChartCard.js","card/ChatListCard.js","page/StreamerModePage.js","page/ModeratorModePage.js","page/MediaCreatorModePage.js","page/LoginRedirectionPage.js","App.js","serviceWorker.js","index.js"],"names":["isLoggedIn","sessionStorage","getItem","SearchBar","props","buttonRef","React","createRef","className","type","ref","inputRef","onKeyDown","e","keyCode","preventDefault","current","click","placeholder","aria-label","onClick","onButtonClick","create","set","originalRepository","repository","loadNewRepo","repo","setFilteredRepo","filtered","clearFilteredRepo","state","useRepositoryStore","UserInfoDiv","loggedIn","href","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","data-target","style","backgroundColor","color","getFilterFromText","window","filterparser","CommentRepository","commentrepository","TopBar","originalRepo","onFilterTextSubmit","a","value","trim","filter","filteredComments","filteredRepo","uc","getUserCount","cc","getCommentCount","console","log","to","NavItem","url","iconName","linkClass","selectedClass","linkName","Sidebar","PageWrapper","title","topBarTitle","children","CollapsableBigCard","collapsableBodyId","collapseLink","columnSizes","aria-controls","headerDropdown","TwitchApiClient","twitchapiclient","streamSaver","videoData","searchedId","setSearchResult","data","useVideoCache","downloading","chatCount","secondCount","startDownload","endDownload","updateProgress","downloadProgressCache","ProgressElem","VideoInfoElem","channel","userDisplayString","display_name","toLowerCase","name","buttonText","src","preview","medium","alt","utcTimeStr","locale","dateObj","Date","dateStr","toLocaleDateString","timeStr","toLocaleTimeString","convertToLocalTime","created_at","game","totalSeconds","hours","Math","floor","minutes","toString","padStart","seconds","getTimeDisplayStr","length","disabled","client","handler","updateProgressFn","endDownloadFn","downloadCount","writer","createWriteStream","size","getWriter","done","errorMsg","httpStatus","commentsData","dataLen","lastChatTime","content_offset_seconds","stringified","JSON","stringify","write","close","getDownloadHandler","downloader","getChatDownloader","videoId","_id","startsWith","slice","downloadChat","bind","ChatDownloaderCard","getVideo","streamerData","searchedName","useFollowerCache","StreamerInfoElem","logo","width","height","FollowerlistDownloaderCard","getUserByName","userdata","ContentRow","DownloaderPageContent","DownloaderPage","Footer","chatlogFilename","followerlistFilename","setChatlogFile","filename","setFollowerlistFile","useFilenameStore","StreamInfoCard","chatlogInputFileElemRef","followerlistInputFileElemRef","chatlogFilenameElem","followerlistFilenameElem","currentRepo","htmlFor","onChange","fr","FileReader","onload","fileToRead","content","result","beforeParse","performance","now","jsonContent","parse","afterParse","commentDatas","beforeRepo","fromCommentsData","afterRepo","end","start","files","readAsText","readAsArrayBuffer","StreamInfo","dataElems","getTotalBits","map","item","index","key","chartData","labels","datasets","label","hoverBackgroundColor","borderColor","chartOptions","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","xAxes","gridLines","display","drawBorder","ticks","maxTicksLimit","autoSkip","yAxes","min","callback","values","zeroLineColor","borderDash","zeroLineBorderDash","legend","tooltips","titleMarginBottom","titleFontColor","titleFontSize","bodyFontColor","borderWidth","xPadding","yPadding","displayColors","caretPadding","callbacks","tooltipItem","chart","yLabel","TopChatterChartCard","chartComponent","Object","assign","topChatters","getTopChatters","user","getDisplayString","count","getChatterData","xLabels","yValues","options","getTimeDisplayString","timeString","ChatCountTimeSeriesCard","timeSize","chatCounts","getCountsByRelativeTime","_","getTimeLabels","getChatCountByTime","tooltipItems","relativeSecond","xLabel","startTimeDisplay","endTimeDisplay","getTimeRange","getEmotesData","imageUrls","emoteNames","topEmotes","getTopEmotes","counts","ec","urls","emote","getImageUrl","plugins","afterDraw","ctx","xAxis","yAxis","forEach","x","getPixelForTick","image","Image","drawImage","names","Array","fill","TopEmotesChartCard","redraw","getCommentColor","comment","userColor","SingleChat","relativeTime","dangerouslySetInnerHTML","__html","htmlText","ChatListCard","chatListComponent","comments","getComments","maxHeight","overflowY","StreamerModePageContent","StreamerModePage","ModeratorModePageContent","aria-describedby","aria-hidden","ModeratorModePage","MediaCreatorModePageContent","MediaCreatorModePage","LoginRedirectionPage","hash","location","token","pairs","split","splited","setItem","replace","App","exact","path","tabIndex","data-dismiss","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0197b2b6.chunk.js","sourcesContent":["\r\n\r\n\r\nexport const loginClientId = \"59x8jyaudw3pnyi722x3e2x9awh385\";\r\nconst accessTokenKey = \"twitch_chat_analyzer_access_token\";\r\n\r\n\r\nexport function isLoggedIn() {\r\n    const accessToken = getAccessToken();\r\n    return accessToken !== null;\r\n}\r\n\r\n\r\nexport function setAccessToken(token) {\r\n    sessionStorage.setItem(accessTokenKey, token);\r\n}\r\n\r\n\r\nexport function getAccessToken() {\r\n    return sessionStorage.getItem(accessTokenKey);\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function SearchBar(props) {\r\n  const buttonRef = React.createRef();\r\n  const keyDown = function(e) {\r\n    if(e.keyCode === 13) {\r\n      e.preventDefault();\r\n      buttonRef.current.click();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"search-bar-form d-flex\">\r\n      <div className=\"input-group\">\r\n        <input type=\"text\" ref={props.inputRef} className=\"form-control bg-light border-0 small\"\r\n            onKeyDown={keyDown} placeholder={props.placeholder} aria-label=\"Search\" />\r\n        <div className=\"input-group-append\">\r\n          <button ref={buttonRef} className=\"btn btn-info\" type=\"button\" onClick={props.onButtonClick}>\r\n            <i className=\"fas fa-search fa-sm\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import create from 'zustand';\r\n\r\n\r\nexport const [useRepositoryStore] = create(set => ({\r\n  originalRepository: null,\r\n  repository: null,\r\n  loadNewRepo: (repo) => set({originalRepository: repo, repository: repo}),\r\n  setFilteredRepo: (filtered) => set({repository: filtered}),\r\n  clearFilteredRepo: () => set(state => ({repository: state.originalRepository}))\r\n}));","import React from \"react\";\r\nimport { isLoggedIn, loginClientId } from \"../loginUtil\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRepositoryStore } from \"../states/repository\";\r\n\r\n\r\nconst devLoginUrl = \"http://localhost:3000/dev/login\";\r\n// This is intentionally very long, to hide Oauth token in \r\nconst productionLoginUrl = \"https://c-rainbow.github.io/twitch-analyzer-login/oauth/redirect/intentionally_long_directory_name/to_hide_token_in_address_bar/still_need_to_add_more_characters/but_I_dont_know_what_else_to_say/I_will_just_generate_some_random_string/rsnxh6cjm08oefbznda54mgce1lfi89oa3gw6lr6/ha5daayx8au6tosio9evov7x1s2qejxzu0uaqvzn/lxj71wviygdkcwb09y14rkiiv0rgap1n52h07zkm/pyfurq9t674cghvbn2fxdrpvnr3vobypy2z1mp8l/login.html\";\r\n\r\n\r\nfunction getLoginUrl(props) {\r\n  `https://id.twitch.tv/oauth2/authorize?response_type=token&`\r\n  `client_id=${loginClientId}&redirect_uri=`\r\n}\r\n\r\n\r\nfunction UserInfoDiv(props) {\r\n  const loggedIn = props.loggedIn;\r\n  if(loggedIn) {\r\n    return (<>\r\n        <a className=\"nav-link dropdown-toggle\" href=\"#aaa0\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">로그인했음</span>\r\n        </a>\r\n        {/* Dropdown - User Information */}\r\n        <div className=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\r\n          <a className=\"dropdown-item\" href=\"#aaa1\">\r\n            <i className=\"fas fa-list fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n            그냥 의미 없는 메뉴 아이템\r\n          </a>\r\n          <div className=\"dropdown-divider\"></div>\r\n          <a className=\"dropdown-item\" href=\"#aaa2\" data-toggle=\"modal\" data-target=\"#logoutModal\">\r\n            <i className=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n            { loggedIn ? \"로그아웃\" : \"로그인\" }\r\n          </a>\r\n        </div>\r\n    </>)\r\n  }\r\n  else {\r\n    return (\r\n      <a href={\"https://id.twitch.tv/oauth2/authorize?response_type=token&client_id=59x8jyaudw3pnyi722x3e2x9awh385&redirect_uri=\" + devLoginUrl}\r\n        className=\"d-sm-inline-block btn btn-sm shadow-sm twitch-login-button\"\r\n        style={{backgroundColor:\"#9146ff\", color: \"#eaeaea\"}}>\r\n        <i className=\"fab fa-twitch text-white-50\"></i> 로그인\r\n      </a>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst getFilterFromText = window.filterparser.getFilterFromText;\r\nconst CommentRepository = window.commentrepository.CommentRepository;\r\n\r\nexport default function TopBar() {\r\n  const inputRef = React.createRef();\r\n  const [originalRepo, setFilteredRepo, clearFilteredRepo] = useRepositoryStore(\r\n    state => ([state.originalRepository, state.setFilteredRepo, state.clearFilteredRepo]));\r\n\r\n  const onFilterTextSubmit = async function() {\r\n    if(!originalRepo) {\r\n      return;\r\n    }\r\n    const value = inputRef.current.value?.trim();\r\n    if(!value) {\r\n      clearFilteredRepo();\r\n      return;\r\n    }\r\n\r\n    const filter = getFilterFromText(value);\r\n    const filteredComments = originalRepo.filter(filter);\r\n    const filteredRepo = new CommentRepository(filteredComments);\r\n\r\n    const uc = filteredRepo.getUserCount();\r\n    const cc = filteredRepo.getCommentCount();\r\n    console.log(`Filtered to ${uc} users and ${cc} chats`);\r\n    setFilteredRepo(filteredRepo);\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-light bg-white shadow sticky-top\">\r\n      \r\n      <Link className=\"brand d-flex\" to=\"/\">\r\n        <h3 className=\"text-dark\">다시보기 분석기</h3>\r\n      </Link>\r\n\r\n      <div className=\"col-sm-6 col-xs-12 ml-auto\">\r\n        <SearchBar inputRef={inputRef} placeholder=\"필터\" onButtonClick={onFilterTextSubmit} />\r\n      </div>\r\n\r\n      {/* Topbar Navbar */}\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        {/* Nav Item - User Information */}\r\n        <li className=\"nav-item dropdown no-arrow\">\r\n          <UserInfoDiv loggedIn={isLoggedIn()} />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n};","\r\nimport React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction iconClasses(iconName) {\r\n    return `fas fa-fw fa-${iconName}`;\r\n}\r\n\r\nfunction textClasses(className, selectedClass) {\r\n    if(className === selectedClass) {\r\n        return `${className} font-weight-bold font-italic`;\r\n    }\r\n    return className;\r\n}\r\n\r\nfunction NavItem(props) {\r\n  return (\r\n    <li className=\"nav-item\">\r\n      <Link className=\"nav-link\" to={props.url} >\r\n        <i className={iconClasses(props.iconName)}></i>\r\n        <span className={textClasses(props.linkClass, props.selectedClass)}>\r\n          {props.linkName}\r\n        </span>\r\n      </Link>  \r\n    </li>\r\n  )\r\n}\r\n\r\n\r\nfunction Sidebar(props) {\r\n  return (\r\n    <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\r\n\r\n      {/* Divider */}\r\n      <div className=\"m-3\"/>\r\n      {/* Heading */}\r\n      <div className=\"sidebar-heading\">\r\n        다운로더\r\n      </div>\r\n      \r\n      {/* Nav Item - Follower list downloader */}\r\n      <NavItem url=\"/react-test/downloader\" iconName=\"running\" linkClass=\"downloader\"\r\n        selectedClass={props.selectedClass} linkName=\"채팅+팔로워 다운로드\" />\r\n      \r\n      {/* Divider */}\r\n      <hr className=\"sidebar-divider\"/>\r\n      {/* Heading */}\r\n      <div className=\"sidebar-heading\">\r\n        분석기\r\n      </div>\r\n      \r\n      {/* Nav Item - Streamer mode */}\r\n      <NavItem url=\"/react-test/analytics/streamer\" iconName=\"paw\" linkClass=\"streamer-mode-analytics\"\r\n        selectedClass={props.selectedClass} linkName=\"스트리머 모드\" />\r\n      {/* Nav Item - Moderator mode */}\r\n      <NavItem url=\"/react-test/analytics/moderator\" iconName=\"toolbox\" linkClass=\"moderator-mode-analytics\"\r\n        selectedClass={props.selectedClass} linkName=\"관리자 모드\" />\r\n      {/* Nav Item - Media Editor mode */}\r\n      <NavItem url=\"/react-test/analytics/media-creator\" iconName=\"cat\" linkClass=\"media-creator-mode-analytics\"\r\n        selectedClass={props.selectedClass} linkName=\"편집자 모드\" />\r\n\r\n      {/* Divider */}\r\n      <hr className=\"sidebar-divider d-none d-md-block\"/>\r\n\r\n      {/* Sidebar Toggler (Sidebar) */}\r\n      <div className=\"text-center d-none d-md-inline\">\r\n        <button className=\"rounded-circle border-0\" id=\"sidebarToggle\"></button>\r\n      </div>    \r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport TopBar from \"../layout/TopBar\";\r\nimport Sidebar from \"../layout/Sidebar\";\r\n\r\n\r\nexport default function PageWrapper(props) {\r\n  return (\r\n    <>\r\n    <TopBar title={props.topBarTitle} />\r\n    <div id=\"wrapper\">\r\n      <Sidebar selectedClass={props.selectedClass} />\r\n      <div id=\"content-wrapper\" className=\"d-flex flex-column py-4\">\r\n        <div id=\"content\">\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport default function CollapsableBigCard(props) {   \r\n  const collapsableBodyId = props.collapsableBodyId;\r\n  const collapseLink = \"#\" + collapsableBodyId;\r\n  return (\r\n    <div className={\"mb-3 \" + props.columnSizes}>\r\n      <div className=\"card shadow\">\r\n        {/* Card Header */}\r\n        <div className=\"card-header d-flex flex-row align-items-center justify-content-between\">\r\n          <a href={collapseLink} className=\"w-100 py-1\" data-toggle=\"collapse\"\r\n              role=\"button\" aria-expanded=\"true\" aria-controls={collapsableBodyId}>\r\n              <h6 className=\"m-0 font-weight-bold text-dark\">{props.title}</h6>\r\n          </a>\r\n          {props.headerDropdown}\r\n        </div>\r\n        {/* Card Body */}\r\n        <div className=\"collapse show\" id={collapsableBodyId}>\r\n          <div className=\"card-body\">\r\n            {props.children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport CollapsableBigCard from \"./CollapsableBigCard\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport create from \"zustand\";\r\n\r\n\r\nconst TwitchApiClient = window.twitchapiclient.TwitchApiClient;\r\nconst streamSaver = window.streamSaver;\r\n\r\n\r\nexport const [useVideoCache] = create(set => ({\r\n  videoData: null,\r\n  searchedId: null,\r\n  setSearchResult: (data, searchedId) => set({videoData: data, searchedId}),\r\n}));\r\n\r\nconst [downloadProgressCache] = create(set => ({\r\n  downloading: false,\r\n  chatCount: 0,\r\n  secondCount: 0,\r\n  startDownload: () => set({downloading: true, chatCount: 0, secondCount: 0}),\r\n  endDownload: () => set({downloading: false, chatCount: 0, secondCount: 0}),\r\n  updateProgress: (chatCount, secondCount) => set({chatCount, secondCount}),\r\n}));\r\n\r\n\r\nfunction convertToLocalTime(utcTimeStr, locale=\"ko-kr\") {\r\n  const dateObj = new Date(utcTimeStr);\r\n  // dateStr, timeStr follow the browser time/locale\r\n  const dateStr = dateObj.toLocaleDateString(locale);\r\n  const timeStr = dateObj.toLocaleTimeString(locale);\r\n  return `${dateStr} ${timeStr}`;\r\n}\r\n\r\nfunction getTimeDisplayStr(totalSeconds) {\r\n  //totalSeconds = Math.floor(totalSeconds);\r\n  const hours = Math.floor(totalSeconds / 3600);\r\n  totalSeconds = totalSeconds % 3600;\r\n  const minutes = Math.floor(totalSeconds / 60).toString().padStart(2, \"0\");\r\n  const seconds = Math.floor(totalSeconds % 60).toString().padStart(2, \"0\");\r\n\r\n  return `${hours}:${minutes}:${seconds}`;\r\n}\r\n\r\n\r\nfunction getDownloadHandler(updateProgressFn, endDownloadFn) {\r\n  let downloadCount = 0;\r\n  const fileStream = streamSaver.createWriteStream(\"chat_download_text.json\", {\r\n    size: 10000,\r\n  });\r\n  const writer = fileStream.getWriter();\r\n\r\n  // commentsData is array of comment JSON objects.\r\n  return async function(done, errorMsg, httpStatus, commentsData) {\r\n    //console.log(\"done: \" + done);\r\n    const dataLen = commentsData.length;\r\n    downloadCount += dataLen;\r\n    const lastChatTime = commentsData[dataLen-1]?.content_offset_seconds;\r\n    //console.log(\"lastChatTime: \" + lastChatTime);\r\n\r\n    const stringified = JSON.stringify(commentsData);\r\n    console.log(\"stringified len: \" + stringified.length);\r\n    await writer.write(stringified);\r\n\r\n    updateProgressFn(downloadCount, lastChatTime);\r\n    if(done) {\r\n      endDownloadFn();\r\n      writer.close();\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction ProgressElem(props) {\r\n  //console.log(\"downloading: \" + props.downloading);\r\n  if(!props.downloading) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"my-1 ml-3\">\r\n      진행상황: {props.chatCount}개 채팅 다운받음\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction VideoInfoElem(props) {\r\n  const videoData = props.videoData;\r\n  const searchedId = props.searchedId; \r\n  if(!searchedId) {  // Initial state without any previous search\r\n    return null;\r\n  }\r\n\r\n  const [downloading, chatCount, secondCount, \r\n      startDownload, endDownload, updateProgress] = downloadProgressCache(\r\n    state => [state.downloading, state.chatCount, state.secondCount, \r\n        state.startDownload, state.endDownload, state.updateProgress]);\r\n\r\n  const onDownloadButtonClick = function(videoData) {\r\n    const client = new TwitchApiClient();\r\n    \r\n    const handler = getDownloadHandler(updateProgress, endDownload);\r\n    //const downloader = TwitchApiClient.getChatDownloader(handler);\r\n    const downloader = client.getChatDownloader(handler); \r\n    \r\n    let videoId = videoData._id;\r\n    if(videoId.startsWith(\"v\")) videoId = videoId.slice(1);\r\n    \r\n    console.log(\"Download start\");\r\n    startDownload();\r\n    downloader.downloadChat(videoId);\r\n  }\r\n\r\n  if(!videoData) {\r\n    return (\r\n      <div className=\"mt-2\">\r\n        <div className=\"m-1 text-danger d-flex justify-content-center\">\r\n          영상을 찾을 수 없습니다: {searchedId}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const channel = videoData.channel;\r\n  let userDisplayString = channel.display_name;\r\n  if(channel.display_name.toLowerCase() !== channel.name.toLowerCase()) {\r\n    userDisplayString += `(${channel.name})`;\r\n  }\r\n\r\n  const buttonText = downloading ? \"다운로드 중\" : \"다운로드 시작\";\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <div className=\"my-1 d-flex justify-content-center\">\r\n        <img src={videoData.preview?.medium} alt=\"video preview\" />\r\n      </div>\r\n      <div className=\"my-1 ml-3\">제목: {videoData.title}</div>\r\n      <div className=\"my-1 ml-3\">스트리머: {userDisplayString}</div>\r\n      <div className=\"my-1 ml-3\">업로드 : {convertToLocalTime(videoData.created_at)}</div>\r\n      <div className=\"my-1 ml-3\">카테고리: {videoData.game}</div>\r\n      <div className=\"my-1 ml-3\">길이: {getTimeDisplayStr(videoData.length)}</div>\r\n      <div className=\"my-1 d-flex justify-content-center\">\r\n        <button className=\"btn btn-primary\" disabled={downloading}\r\n            onClick={onDownloadButtonClick.bind(null, videoData)}>\r\n          {buttonText}\r\n        </button>\r\n      </div>\r\n      <ProgressElem downloading={downloading} chatCount={chatCount} secondCount={secondCount} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default function ChatDownloaderCard(props) {\r\n  const inputRef = React.createRef();\r\n  const [videoData, searchedId, setSearchResult] = useVideoCache(\r\n      state => [state.videoData, state.searchedId, state.setSearchResult]);\r\n\r\n  const onButtonClick = async function() {\r\n    const value = inputRef.current.value.trim();\r\n    if(!value) {\r\n      return;\r\n    }\r\n    const data = await TwitchApiClient.getVideo(value);\r\n    setSearchResult(data, value);\r\n    console.log(\"Data: \" + JSON.stringify(data));\r\n  }\r\n\r\n  return (\r\n    <CollapsableBigCard title={props.title} columnSizes=\"col-md-12 col-lg-6\"\r\n        collapsableBodyId=\"chat-downloader-id\">\r\n      <SearchBar placeholder=\"다시보기 번호 (예: 123456789)\" inputRef={inputRef} onButtonClick={onButtonClick} />\r\n      <VideoInfoElem videoData={videoData} searchedId={searchedId} />\r\n    </CollapsableBigCard>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport CollapsableBigCard from \"./CollapsableBigCard\";\r\nimport SearchBar from \"../components/SearchBar\"\r\nimport create from \"zustand\";\r\n\r\n\r\nconst TwitchApiClient = window.twitchapiclient.TwitchApiClient;\r\n\r\nexport const [useFollowerCache] = create(set => ({\r\n  streamerData: null,\r\n  searchedName: null,\r\n  setSearchResult: (data, searchedName) => set({streamerData: data, searchedName}),\r\n}));\r\n\r\n\r\nfunction StreamerInfoElem(props) {\r\n  const streamerData = props.streamerData;\r\n  const searchedName = props.searchedName;\r\n  if(!searchedName) {  // Initial state without any previous search\r\n    return null;\r\n  }\r\n  if(!streamerData) {\r\n    return (\r\n      <div className=\"mt-2\">\r\n        <div className=\"m-1 text-danger d-flex justify-content-center\">\r\n          스트리머를 찾을 수 없습니다: {searchedName}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  let userDisplayString = streamerData.display_name;\r\n  if(streamerData.display_name.toLowerCase() !== streamerData.name.toLowerCase()) {\r\n    userDisplayString += `(${streamerData.name})`;\r\n  }\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <div className=\"m-1 d-flex justify-content-center rounded-circle\">\r\n        <img src={streamerData.logo} width=\"150\" height=\"150\"\r\n            className=\"rounded-circle border border-dark\" alt=\"profile logo\" />\r\n      </div>\r\n      <div className=\"m-1 d-flex justify-content-center\">{userDisplayString}</div>\r\n      <div className=\"m-1 d-flex justify-content-center\">\r\n        <button className=\"btn btn-primary\">다운로드 시작</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default function FollowerlistDownloaderCard(props) {\r\n  const inputRef = React.createRef();\r\n  const [streamerData, searchedName, setSearchResult] = useFollowerCache(\r\n      state => [state.streamerData, state.searchedName, state.setSearchResult]);\r\n\r\n  const onButtonClick = async function() {\r\n    const value = inputRef.current.value;\r\n    if(!value) {\r\n      return;\r\n    }\r\n\r\n    const userdata = await TwitchApiClient.getUserByName(value) ?? null;\r\n    setSearchResult(userdata, value);\r\n    console.log(\"userdata: \" + JSON.stringify(userdata));\r\n  }\r\n\r\n  return (\r\n    <CollapsableBigCard title={props.title} columnSizes=\"col-md-12 col-lg-6\"\r\n        collapsableBodyId=\"followerlist-downloader-id\">\r\n      <SearchBar placeholder=\"스트리머 아이디(영어)\" inputRef={inputRef} onButtonClick={onButtonClick} />\r\n      <StreamerInfoElem streamerData={streamerData} searchedName={searchedName} />\r\n    </CollapsableBigCard>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport default function ContentRow(props) {\r\n    return (\r\n        <div className=\"row\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","\r\nimport React from 'react';\r\nimport PageWrapper from './PageWrapper';\r\nimport ChatDownloaderCard from '../card/ChatDownloaderCard';\r\nimport FollowerlistDownloaderCard from '../card/FollowerlistDownloaderCard';\r\nimport ContentRow from '../layout/ContentRow';\r\n\r\n\r\nfunction DownloaderPageContent() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <ContentRow>\r\n        <ChatDownloaderCard title=\"다시보기 채팅 다운받기\" />\r\n        <FollowerlistDownloaderCard title=\"팔로워 목록 다운받기\" />\r\n      </ContentRow>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default function DownloaderPage() {\r\n  return (\r\n    <PageWrapper selectedClass=\"downloader\" topBarTitle=\"다운로드 페이지\">\r\n      <DownloaderPageContent />\r\n    </PageWrapper>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"sticky-footer bg-white\">\r\n            <div className=\"container my-auto\">\r\n            <div className=\"copyright text-center my-auto\">\r\n                <span>Copyright &copy; 2020 https://twitch.tv/c-rainbow</span>\r\n            </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nimport CollapsableBigCard from \"./CollapsableBigCard\";\r\nimport ContentRow from \"../layout/ContentRow\";\r\nimport { useRepositoryStore } from \"../states/repository\";\r\nimport create from \"zustand\";\r\n\r\n\r\nconst [useFilenameStore] = create(set => ({\r\n  chatlogFilename: null,\r\n  followerlistFilename: null,\r\n  setChatlogFile: (filename) => set({chatlogFilename: filename}),\r\n  setFollowerlistFile: (filename) => set({followerlistFilename: filename})\r\n}));\r\n\r\n\r\nexport default function StreamInfoCard() {\r\n  const chatlogInputFileElemRef = React.createRef();\r\n  const followerlistInputFileElemRef = React.createRef();\r\n  \r\n  const [chatlogFilename, setChatlogFile, followerlistFilename, setFollowerlistFile] = useFilenameStore(\r\n      state => [state.chatlogFilename, state.setChatlogFile,\r\n          state.followerlistFilename, state.setFollowerlistFile]);\r\n  \r\n  let chatlogFilenameElem = null;\r\n  if(chatlogFilename !== null) {\r\n    chatlogFilenameElem = <span className=\"ml-2\">{chatlogFilename}</span>;\r\n  }\r\n  let followerlistFilenameElem = null;\r\n  if(followerlistFilename !== null) {\r\n    followerlistFilenameElem = <span className=\"ml-2\">{followerlistFilename}</span>;\r\n  }\r\n\r\n  const [currentRepo, loadNewRepo] = useRepositoryStore(\r\n      state => ([state.repository, state.loadNewRepo]));\r\n  const readChatlogFile = function() { \r\n    const fr = new FileReader(); \r\n    fr.onload = function() { \r\n      setChatlogFile(fileToRead.name);\r\n\r\n      const content = fr.result.toString();\r\n\r\n      const beforeParse = performance.now();\r\n      const jsonContent = JSON.parse(content);\r\n      const afterParse = performance.now();\r\n      console.log(\"Parse time: \" + (afterParse - beforeParse) + \"ms\");\r\n\r\n      const commentDatas = jsonContent[\"comments\"] || [];\r\n\r\n      const beforeRepo = performance.now();\r\n      const CommentRepository = window.commentrepository.CommentRepository;\r\n      const originalRepository = CommentRepository.fromCommentsData(commentDatas);\r\n      const afterRepo = performance.now();\r\n      console.log(\"Repository time: \" + (afterRepo - beforeRepo) + \"ms\");\r\n\r\n      loadNewRepo(originalRepository);\r\n      const end = performance.now();\r\n      console.log(\"Load time: \" + (end - start) + \"ms\");\r\n    }    \r\n    const fileToRead = chatlogInputFileElemRef.current.files[0];\r\n    const start = performance.now();\r\n    fr.readAsText(fileToRead); \r\n  }\r\n\r\n  const readFollowerlistFile = function() {\r\n    const fr = new FileReader();\r\n    fr.onload = function() {\r\n      setFollowerlistFile(fileToRead.name);\r\n\r\n      const content = fr.result;//.toString();\r\n      \r\n      const beforeParse = performance.now();\r\n      const jsonContent = JSON.parse(content);\r\n      const afterParse = performance.now();\r\n      console.log(\"Parse time: \" + (afterParse - beforeParse) + \"ms\");\r\n      \r\n      const followerlist = jsonContent[\"followers\"] || [];\r\n      \r\n      //originalRepo.addFollowerlist(followerlist);\r\n      if(1 === true) currentRepo.addFollowerlist(followerlist);\r\n      const end = performance.now();\r\n      console.log(\"Followerlist load time: \" + (end - start) + \"ms\");\r\n    }\r\n    const fileToRead = followerlistInputFileElemRef.current.files[0];\r\n    const start = performance.now();\r\n    fr.readAsArrayBuffer(fileToRead); \r\n  }\r\n\r\n  return (\r\n    <CollapsableBigCard title=\"영상 정보\" columnSizes=\"col-12\" collapsableBodyId=\"video-info-id\">\r\n      <ContentRow>\r\n        <div className=\"col-sm-12 col-md-6\">\r\n          <span className=\"button-container\">\r\n            <label htmlFor=\"chatlog-inputfile\" className=\"btn btn-secondary chatlog-inputfile-upload-label\">\r\n              채팅 로그 파일 선택\r\n            </label>\r\n            <input type=\"file\" name=\"chatlog-inputfile\" id=\"chatlog-inputfile\" className=\"d-none\"\r\n              ref={chatlogInputFileElemRef} onChange={readChatlogFile} />\r\n          </span>\r\n          {chatlogFilenameElem}\r\n        </div>\r\n        <div className=\"col-sm-12 col-md-6\">\r\n        <span className=\"button-container\">\r\n          <label htmlFor=\"followerlist-inputfile\" className=\"btn btn-secondary chatlog-inputfile-upload-label\">\r\n            팔로워 목록 파일 선택\r\n          </label>\r\n          <input type=\"file\" name=\"followerlist-inputfile\" id=\"followerlist-inputfile\" className=\"d-none\"\r\n              ref={followerlistInputFileElemRef} onChange={readFollowerlistFile} />\r\n          </span>\r\n          {followerlistFilenameElem}\r\n        </div>\r\n      </ContentRow>\r\n      <StreamInfo repository={currentRepo} />\r\n    </CollapsableBigCard>\r\n  )\r\n}\r\n\r\n\r\nfunction StreamInfo(props) {\r\n  const repository = props.repository;\r\n  if(repository === null) {\r\n    return null;\r\n  }\r\n\r\n  const data = [\r\n    //[\"총 이모티콘 사용 개수 (중복 포함)\", ......, \"개\"],\r\n    //[\"총 쓰인 이모티콘 종류 (중복 제외)\", ......, \"가지\"],\r\n    [\"채팅 친 사람 수\", repository.getUserCount(), \"명\"],\r\n    [\"총 채팅 개수\", repository.getCommentCount(), \"개\"],\r\n    [\"총 비트\", repository.getTotalBits(), \"비트\"]\r\n  ];\r\n\r\n  const dataElems = data.map((item, index) => (\r\n    <div className=\"col-sm-12 col-md-6 col-lg-4 my-1\" key={index.toString()}>\r\n      {item[0]}: {item[1]}{item[2]}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <hr className=\"divider\"/>\r\n      <ContentRow>\r\n        {dataElems}\r\n      </ContentRow>\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport { useRepositoryStore } from \"../states/repository\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport CollapsableBigCard from \"./CollapsableBigCard\";\r\n\r\n\r\nconst chartData = {\r\n  labels: [],\r\n  datasets: [{\r\n    label: \"\",\r\n    backgroundColor: \"#4e73df\",\r\n    hoverBackgroundColor: \"#2e59d9\",\r\n    borderColor: \"#4e73df\",\r\n    data: [],\r\n  }],\r\n};\r\n\r\n\r\nconst chartOptions = {\r\n  maintainAspectRatio: false,\r\n  layout: {\r\n      padding: {\r\n          left: 10,\r\n          right: 25,\r\n          top: 25,\r\n          bottom: 0\r\n      }\r\n  },\r\n  scales: {\r\n      xAxes: [{\r\n          gridLines: {\r\n              display: false,\r\n              drawBorder: false\r\n          },\r\n          ticks: {\r\n              maxTicksLimit: 6,\r\n              autoSkip: false,\r\n          },\r\n      }],\r\n      yAxes: [{\r\n          ticks: {\r\n              min: 0, \r\n              //max: maxCount,\r\n              maxTicksLimit: 5,\r\n              padding: 10,\r\n              // Include a dollar sign in the ticks\r\n              callback: function(value, index, values) {\r\n                  return value + \"개\";\r\n              }\r\n          },\r\n          gridLines: {\r\n              color: \"rgb(234, 236, 244)\",\r\n              zeroLineColor: \"rgb(234, 236, 244)\",\r\n              drawBorder: false,\r\n              borderDash: [2],\r\n              zeroLineBorderDash: [2]\r\n          }\r\n      }],\r\n  },\r\n  legend: {\r\n      display: false\r\n  },\r\n  tooltips: {\r\n      titleMarginBottom: 10,\r\n      titleFontColor: '#6e707e',\r\n      titleFontSize: 14,\r\n      backgroundColor: \"rgb(255,255,255)\",\r\n      bodyFontColor: \"#858796\",\r\n      borderColor: '#dddfeb',\r\n      borderWidth: 1,\r\n      xPadding: 15,\r\n      yPadding: 15,\r\n      displayColors: false,\r\n      caretPadding: 10,\r\n      callbacks: {\r\n          label: function(tooltipItem, chart) {\r\n              return tooltipItem.yLabel + \"개\";\r\n          }\r\n      }\r\n  },\r\n};\r\n\r\n\r\nfunction getChatterData(repository) {\r\n    const topChatters = repository.getTopChatters(20);\r\n    const displayStrings = topChatters.map((uc) => uc.user.getDisplayString());\r\n    const counts = topChatters.map((uc) => uc.count);\r\n    //console.log(\"counts:\" + counts);\r\n    //const maxCount = counts.reduce((prev, curr) => Math.max(prev, curr));\r\n    return [displayStrings, counts];\r\n}\r\n\r\n\r\nexport default function TopChatterChartCard(props) {\r\n  const currentRepo = useRepositoryStore(state => state.repository);\r\n  let chartComponent = null;\r\n  if(currentRepo !== null) {\r\n    const data = Object.assign({}, chartData);\r\n    const [xLabels, yValues] = getChatterData(currentRepo);\r\n    data.labels = xLabels;\r\n    data.datasets[0].data = yValues;\r\n    //console.log(\"data: \" + JSON.stringify(data));\r\n    chartComponent = <Bar data={data} options={chartOptions} />\r\n  }\r\n  return (\r\n    <CollapsableBigCard title={props.title} columnSizes=\"col-12\" collapsableBodyId=\"top-chatter-chart-id\">\r\n      <div className=\"chart-area\">\r\n        {chartComponent}\r\n      </div>\r\n    </CollapsableBigCard>\r\n  )\r\n}","\r\n\r\nexport function getTimeDisplayString(totalSeconds) {  \r\n  const seconds = Math.floor(totalSeconds % 60);\r\n  let timeString = seconds.toString().padStart(2, \"0\");\r\n   \r\n  totalSeconds = Math.floor(totalSeconds / 60);\r\n  const minutes = totalSeconds % 60;\r\n  timeString = minutes.toString().padStart(2, \"0\") + \":\" + timeString;\r\n\r\n  totalSeconds = Math.floor(totalSeconds / 60);\r\n  if(totalSeconds > 0) {\r\n    timeString = totalSeconds.toString().padStart(2, \"0\") + \":\" + timeString;\r\n  }\r\n\r\n  return timeString;\r\n}\r\n","import React from \"react\";\r\nimport { useRepositoryStore } from \"../states/repository\";\r\nimport CollapsableBigCard from \"./CollapsableBigCard\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { getTimeDisplayString } from \"../util/timeUtil\";\r\n\r\n\r\n\r\nconst chartData = {\r\n  labels: [],\r\n  datasets: [{\r\n    label: \"\",\r\n    backgroundColor: \"#4e73df\",\r\n    hoverBackgroundColor: \"#2e59d9\",\r\n    borderColor: \"#4e73df\",\r\n    data: [],\r\n  }],\r\n};\r\n\r\n\r\nconst chartOptions = {\r\n  maintainAspectRatio: false,\r\n  layout: {\r\n      padding: {\r\n          left: 10,\r\n          right: 25,\r\n          top: 25,\r\n          bottom: 0\r\n      }\r\n  },\r\n  scales: {\r\n      xAxes: [{\r\n          gridLines: {\r\n              display: false,\r\n              drawBorder: false\r\n          },\r\n          ticks: {\r\n              maxTicksLimit: 6,\r\n              autoSkip: false,\r\n              callback: function(value, index, values) {\r\n                if(value % 1800 === 0) {\r\n                  return getTimeDisplayString(value);\r\n                }\r\n                return \"\";\r\n              }\r\n          },\r\n      }],\r\n      yAxes: [{\r\n          ticks: {\r\n              min: 0, \r\n              //max: maxCount,\r\n              maxTicksLimit: 5,\r\n              padding: 10,\r\n              callback: function(value, index, values) {\r\n                  return value + \"개\";\r\n              }\r\n          },\r\n          gridLines: {\r\n              color: \"rgb(234, 236, 244)\",\r\n              zeroLineColor: \"rgb(234, 236, 244)\",\r\n              drawBorder: false,\r\n              borderDash: [2],\r\n              zeroLineBorderDash: [2]\r\n          }\r\n      }],\r\n  },\r\n  legend: {\r\n      display: false\r\n  },\r\n  tooltips: {\r\n      titleMarginBottom: 10,\r\n      titleFontColor: '#6e707e',\r\n      titleFontSize: 14,\r\n      backgroundColor: \"rgb(255,255,255)\",\r\n      bodyFontColor: \"#858796\",\r\n      borderColor: '#dddfeb',\r\n      borderWidth: 1,\r\n      xPadding: 15,\r\n      yPadding: 15,\r\n      displayColors: false,\r\n      caretPadding: 10,\r\n      callbacks: {\r\n          title: null,  // To be filled later\r\n          label: function(tooltipItem, chart) {\r\n              return tooltipItem.yLabel + \"개\";\r\n          }\r\n      }\r\n  },\r\n};\r\n\r\n\r\nfunction getTimeRange(timeSize) {\r\n  return function(tooltipItems) {\r\n    const relativeSecond = tooltipItems[0].xLabel;\r\n    const startTimeDisplay = getTimeDisplayString(relativeSecond);\r\n    const endTimeDisplay = getTimeDisplayString(relativeSecond + timeSize - 1);\r\n    return `${startTimeDisplay}-${endTimeDisplay}`;\r\n  }\r\n}\r\n\r\n\r\nfunction getTimeLabels(chatCounts, timeSize) {\r\n  return chatCounts.map((_, index) => index * timeSize); //getTimeDisplayString(index * timeSize));\r\n}\r\n\r\n\r\nfunction getChatCountByTime(repository, timeSize) {\r\n  const chatCounts = repository.getCountsByRelativeTime(timeSize);\r\n  const timeLabels = getTimeLabels(chatCounts, timeSize);\r\n  //console.log(\"counts:\" + counts);\r\n  //const maxCount = counts.reduce((prev, curr) => Math.max(prev, curr));\r\n  return [timeLabels, chatCounts];\r\n}\r\n\r\n\r\nexport default function ChatCountTimeSeriesCard(props) {\r\n  const currentRepo = useRepositoryStore(state => state.repository);\r\n  let chartComponent = null;\r\n  if(currentRepo !== null) {\r\n    const timeSize = 60;  // Count every minute\r\n    const data = Object.assign({}, chartData);\r\n    const [xLabels, yValues] = getChatCountByTime(currentRepo, timeSize);\r\n    data.labels = xLabels;\r\n    data.datasets[0].data = yValues;\r\n    const options = Object.assign({}, chartOptions);\r\n    options.tooltips.callbacks.title = getTimeRange(timeSize);\r\n\r\n    chartComponent = <Bar data={data} options={chartOptions} />\r\n  }\r\n  return (\r\n    <CollapsableBigCard title={props.title} columnSizes=\"col-12\" collapsableBodyId=\"chat-time-series-id\">\r\n      <div className=\"chart-area\">\r\n        {chartComponent}\r\n      </div>\r\n    </CollapsableBigCard>\r\n  )\r\n}","import React from \"react\";\r\nimport { useRepositoryStore } from \"../states/repository\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport CollapsableBigCard from \"./CollapsableBigCard\";\r\n\r\n\r\nconst chartData = {\r\n  labels: [],\r\n  datasets: [{\r\n    label: \"\",\r\n    backgroundColor: \"#4e73df\",\r\n    hoverBackgroundColor: \"#2e59d9\",\r\n    borderColor: \"#4e73df\",\r\n    data: [],\r\n  }],\r\n};\r\n\r\n\r\nconst chartOptions = {\r\n  maintainAspectRatio: false,\r\n  layout: {\r\n    padding: {\r\n      left: 10,\r\n      right: 25,\r\n      top: 20,\r\n      bottom: 10\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [{\r\n      gridLines: {\r\n        display: false,\r\n        drawBorder: false\r\n      },\r\n      ticks: {\r\n        maxTicksLimit: 6,\r\n        autoSkip: false,\r\n      },\r\n    }],\r\n    yAxes: [{\r\n      ticks: {\r\n        min: 0, \r\n        //max: maxCount,\r\n        maxTicksLimit: 5,\r\n        padding: 10,\r\n        callback: function(value, index, values) {\r\n          return value + \"개\";\r\n        }\r\n      },\r\n      gridLines: {\r\n        color: \"rgb(234, 236, 244)\",\r\n        zeroLineColor: \"rgb(234, 236, 244)\",\r\n        drawBorder: false,\r\n        borderDash: [2],\r\n        zeroLineBorderDash: [2]\r\n      }\r\n    }],\r\n  },\r\n  legend: {\r\n    display: false\r\n  },\r\n  tooltips: {\r\n    titleMarginBottom: 10,\r\n    titleFontColor: '#6e707e',\r\n    titleFontSize: 14,\r\n    backgroundColor: \"rgb(255,255,255)\",\r\n    bodyFontColor: \"#858796\",\r\n    borderColor: '#dddfeb',\r\n    borderWidth: 1,\r\n    xPadding: 15,\r\n    yPadding: 15,\r\n    displayColors: false,\r\n    caretPadding: 10,\r\n    callbacks: {\r\n      title: null,  // To be filled by getTooltipTitleCallback()\r\n      label: function(tooltipItem, chart) {\r\n        return tooltipItem.yLabel + \"개\";\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n\r\nfunction getTooltipTitleCallback(emoteNames) {\r\n  return function(tooltipItems, chart) {\r\n    const tooltipItem = tooltipItems[0];\r\n    return emoteNames[tooltipItem.index];\r\n  };\r\n}\r\n\r\nfunction getEmoteLabelPlugins(imageUrls) {\r\n  return [{\r\n    afterDraw: chart => {      \r\n      const ctx = chart.chart.ctx; \r\n      const xAxis = chart.scales['x-axis-0'];\r\n      const yAxis = chart.scales['y-axis-0'];\r\n      xAxis.ticks.forEach((_, index) => {  \r\n        const x = xAxis.getPixelForTick(index);      \r\n        const image = new Image();\r\n        image.src = imageUrls[index];\r\n        ctx.drawImage(image, x - 12, yAxis.bottom + 5);\r\n      });      \r\n    }\r\n  }]\r\n}\r\n\r\n\r\nfunction getEmotesData(repository) {\r\n  const topEmotes = repository.getTopEmotes(20);\r\n  const counts = topEmotes.map((ec) => ec.count);\r\n  const urls = topEmotes.map(ec => ec.emote.getImageUrl());\r\n  const plugins = getEmoteLabelPlugins(urls);\r\n  \r\n  const options = Object.assign({}, chartOptions);\r\n  const names = topEmotes.map(ec => ec.emote.name);\r\n  options.tooltips.callbacks.title = getTooltipTitleCallback(names);\r\n\r\n  const xLabels = new Array(names.length).fill(\"\");\r\n\r\n  return [xLabels, counts, options, plugins];\r\n}\r\n\r\n\r\nexport default function TopEmotesChartCard(props) {\r\n  const currentRepo = useRepositoryStore(state => state.repository);\r\n  let chartComponent = null;\r\n  if(currentRepo !== null) {\r\n    const data = Object.assign({}, chartData);\r\n    const [xLabels, yValues, options, plugins] = getEmotesData(currentRepo);\r\n    data.labels = xLabels;\r\n    data.datasets[0].data = yValues;\r\n    chartComponent = <Bar data={data} options={options} plugins={plugins} redraw={true} />\r\n  }\r\n  return (\r\n    <CollapsableBigCard title={props.title} columnSizes=\"col-12\" collapsableBodyId=\"top-emotes-chart-id\">\r\n      <div className=\"chart-area\">\r\n        {chartComponent}\r\n      </div>\r\n    </CollapsableBigCard>\r\n  )\r\n}","import React from \"react\";\r\nimport { useRepositoryStore } from \"../states/repository\";\r\nimport CollapsableBigCard from \"./CollapsableBigCard\";\r\nimport { getTimeDisplayString } from \"../util/timeUtil\";\r\n\r\n\r\nfunction getCommentColor(comment) {\r\n  return comment.userColor ?? \"#aaa\";\r\n}\r\n\r\n\r\nfunction SingleChat(props) {\r\n  const comment = props.comment;\r\n  const index = props.index;\r\n  return (\r\n    <div className=\"my-1\" key={index.toString()}>\r\n      <span className=\"small\">{getTimeDisplayString(comment.relativeTime)} </span>\r\n      <span className=\"large font-weight-bold\" style={{color: getCommentColor(comment)}}>\r\n        {comment.user.getDisplayString()}\r\n      </span>\r\n      <span>: </span>\r\n      {/* Is this a good way to use dangerouslySetInnerHTML here? */}\r\n      <span dangerouslySetInnerHTML={{__html: comment.htmlText}} />\r\n    </div>  \r\n  )\r\n}\r\n\r\n\r\nexport default function ChatListCard(props) {\r\n  const currentRepo = useRepositoryStore(state => state.repository);\r\n  let chatListComponent = null;\r\n  if(currentRepo !== null) {\r\n\r\n    let comments = currentRepo.getComments();\r\n    if(comments.length > 100) {\r\n      comments = comments.slice(0, 100); \r\n    }\r\n    console.log(\"Comment length: \" + comments.length);\r\n\r\n    chatListComponent = comments.map((comment, index) => (\r\n      <SingleChat comment={comment} index={index} key={index} />\r\n    ));\r\n  }\r\n  return (\r\n    <CollapsableBigCard title={props.title} columnSizes=\"col-12\" collapsableBodyId=\"chat-list-id\">\r\n      <div style={{maxHeight: \"40rem\", overflowY: \"scroll\"}}>{chatListComponent}</div>\r\n    </CollapsableBigCard>\r\n  )\r\n}","import React from 'react';\r\nimport ContentRow from '../layout/ContentRow';\r\nimport PageWrapper from './PageWrapper';\r\nimport StreamInfoCard from '../card/StreamInfoCard';\r\nimport TopChatterChartCard from '../card/TopChatterChartCard';\r\nimport ChatCountTimeSeriesCard from '../card/ChatCountTimeSeriesCard';\r\nimport TopEmotesChartCard from '../card/TopEmotesChartCard';\r\nimport ChatListCard from '../card/ChatListCard';\r\n\r\n\r\n\r\nfunction StreamerModePageContent() {\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* Video info row */}\r\n      <ContentRow>\r\n        <StreamInfoCard />\r\n      </ContentRow>\r\n\r\n      {/* Chat count by time row */}\r\n      <ContentRow>\r\n        <ChatCountTimeSeriesCard title=\"시간별 채팅\" />\r\n      </ContentRow>\r\n\r\n      {/* Chat content row */}\r\n      <ContentRow>\r\n        {/* Filtered chat area */}\r\n        <ChatListCard title=\"채팅 검색 결과\" />\r\n      </ContentRow>\r\n\r\n      {/* Top Chatter row */}\r\n      <ContentRow>\r\n        <TopChatterChartCard title=\"채팅 랭킹\" />\r\n      </ContentRow>\r\n\r\n      {/* Top emotes row */}\r\n      <ContentRow>\r\n        <TopEmotesChartCard title=\"이모티콘 통계\" />\r\n      </ContentRow>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default function StreamerModePage() {\r\n  return (\r\n    <PageWrapper selectedClass=\"streamer-mode-analytics\" topBarTitle=\"스트리머 모드\">\r\n      <StreamerModePageContent />\r\n    </PageWrapper>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PageWrapper from './PageWrapper';\r\nimport StreamInfoCard from '../card/StreamInfoCard';\r\nimport ContentRow from '../layout/ContentRow';\r\n\r\n\r\nfunction ModeratorModePageContent() {\r\n  return (\r\n\r\n    <div className=\"container-fluid\">\r\n\r\n      {/* Page Heading */}\r\n      <div className=\"d-sm-flex align-items-center justify-content-between mt-4 mb-4\">\r\n        <h1 className=\"h3 mb-0 text-gray-800\">대시보드</h1>\r\n        <input type=\"file\" name=\"inputfile\" id=\"inputfile\" />\r\n        <a href=\"https://id.twitch.tv/oauth2/authorize?response_type=token&client_id=59x8jyaudw3pnyi722x3e2x9awh385&redirect_uri=https://c-rainbow.github.io/twitch-analyzer-login/oauth/redirect/intentionally_long_directory_name/to_hide_token_in_address_bar/still_need_to_add_more_characters/but_I_dont_know_what_else_to_say/I_will_just_generate_some_random_string/rsnxh6cjm08oefbznda54mgce1lfi89oa3gw6lr6/ha5daayx8au6tosio9evov7x1s2qejxzu0uaqvzn/lxj71wviygdkcwb09y14rkiiv0rgap1n52h07zkm/pyfurq9t674cghvbn2fxdrpvnr3vobypy2z1mp8l/login.html\"\r\n          className=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm twitch-login-button\">\r\n          <i className=\"fas fa-download fa-sm text-white-50\"></i> 트위치 로그인\r\n      </a>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        {/* Chat filter area */}\r\n        <div className=\"col-xl-12 col-lg-12\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\"></div>\r\n              <div className=\"col-6\">\r\n                <div className=\"card-body\">\r\n                  {/* Content Search */}\r\n                  <form className=\"d-block-inline ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n                    <div className=\"input-group\">\r\n                      <input type=\"text\" id=\"filter-text-input\" className=\"form-control bg-light border-0 small\"\r\n                        placeholder=\"필터\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                      <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-primary\" type=\"button\" id=\"filter-button\">\r\n                          <i className=\"fas fa-search fa-sm\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"col-3\"></div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 m-2\">\r\n                <span className=\"ml-4 mr-2\">최근 사용한 필터:</span>\r\n                <span className=\"ml-1 mr-1\">\r\n                  <button type=\"button\" className=\"btn btn-outline-success\">\r\n                    비구독자<i className=\"fas fa-times ml-1\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </span>\r\n                <span className=\" ml-1 mr-1\">\r\n                  <button type=\"button\" className=\"btn btn-outline-success\">\r\n                    아이디 major_trihard &amp; 생성일 1일 미만\r\n                    <i className=\"fas fa-times ml-1\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </span>\r\n                <span className=\" ml-1 mr-1\">\r\n                  <button type=\"button\" className=\"btn btn-outline-success\">\r\n                    별 의미 없는 필터\r\n                    <i className=\"fas fa-times ml-1\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {/* Video info row */}\r\n      <ContentRow>\r\n        <StreamInfoCard />\r\n      </ContentRow>\r\n\r\n      {/* Content Row */}\r\n\r\n      <div className=\"row\">\r\n\r\n        {/* Area Chart */}\r\n        <div className=\"col-xl-12 col-lg-12 mb-4\">\r\n          <div className=\"card shadow\">\r\n            {/* Card Header - Dropdown */}\r\n            {/*<a href=\"#collapse-chat-count\" className=\"d-block card-header py-3\" data-toggle=\"collapse\"\r\n          role=\"button\" aria-expanded=\"true\" aria-controls=\"collapse-chat-count\">*/}\r\n            <div className=\"card-header d-flex flex-row align-items-center justify-content-between\">\r\n\r\n              <a href=\"#collapse-chat-count\" className=\"w-100 py-1\" data-toggle=\"collapse\"\r\n                role=\"button\" aria-expanded=\"true\" aria-controls=\"collapse-chat-count\">\r\n                <h6 className=\"m-0 font-weight-bold text-primary\">시간별 채팅</h6>\r\n              </a>\r\n              <div className=\"dropdown no-arrow\">\r\n                <a className=\"dropdown-toggle\" href=\"#dropdownMenuLink\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  <i className=\"fas fa-ellipsis-v fa-sm fa-fw text-gray-400\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            {/*</a>*/}\r\n            {/* Card Body */}\r\n            <div className=\"collapse show\" id=\"collapse-chat-count\">\r\n              <div className=\"card-body\">\r\n                <div className=\"chart-area\">\r\n                  <canvas id=\"top-chatter-chart-canvas\"></canvas>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Pie Chart */}\r\n        {/*<div className=\"col-xl-4 col-lg-5 mb-4\">\r\n      <div className=\"card  h-100\">\r\n        {/* Card Header - Dropdown ->\r\n        <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n        <a href=\"#collapse-top-chat-count\" className=\"w-100 py-1\" data-toggle=\"collapse\"\r\n          role=\"button\" aria-expanded=\"true\" aria-controls=\"collapse-top-chat-count\">\r\n          <h6 className=\"m-0 font-weight-bold text-primary\">채팅 순위 Top 5</h6>\r\n        </a>\r\n        </div>\r\n        {/* Card Body ->\r\n        <div className=\"collapse show\" id=\"collapse-top-chat-count\">\r\n        <div className=\"card-body\">\r\n          <div className=\"chart-pie pt-4 pb-2\">\r\n          <canvas id=\"top-chatter-chart-canvas\"></canvas>\r\n          </div>\r\n          <div className=\"mt-4 text-center small\">\r\n          <span className=\"mr-2\">\r\n            <i className=\"fas fa-circle text-primary\"></i>이옙 (e_e_f_f)\r\n          </span>\r\n          <span className=\"mr-2\">\r\n            <i className=\"fas fa-circle text-success\"></i>아르도르(carrot972)\r\n          </span>\r\n          <span className=\"mr-2\">\r\n            <i className=\"fas fa-circle text-info\"></i>sorrydionysos\r\n          </span>\r\n          <span className=\"mr-2\">\r\n            <i className=\"fas fa-circle text-error\"></i>기타\r\n          </span>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      </div>*/}\r\n      </div>\r\n\r\n      {/* Content Row */}\r\n      <div className=\"row\">\r\n\r\n\r\n        {/* Content Column */}\r\n        <div className=\"col-xl-12 col-lg-12 mb-4\">\r\n\r\n          {/* Project Card Example */}\r\n          <div className=\"card shadow mb-12\">\r\n            <div className=\"card-header py-3\">\r\n              <h6 className=\"m-0 font-weight-bold text-primary\">이모티콘 통계</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"chart-bar\">\r\n                <canvas id=\"top-emote-chart-canvas\"></canvas>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search bar row */}\r\n      <div className=\"row\">\r\n        {/* Chat filter area */}\r\n        <div className=\"col-xl-4 col-lg-5\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n              <h6 className=\"m-0 font-weight-bold text-primary\">채팅 필터</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {/* Content Search */}\r\n              <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n                <div className=\"input-group\">\r\n                  <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                  <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-primary\" type=\"button\">\r\n                      <i className=\"fas fa-search fa-sm\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Filtered chat area */}\r\n        <div className=\"col-xl-8 col-lg-7\">\r\n          <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n              <h6 className=\"m-0 font-weight-bold text-primary\">검색 결과</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"chart-pie pt-4 pb-2\">\r\n                <canvas id=\"myPieChart\"></canvas>\r\n              </div>\r\n              <div className=\"mt-4 text-center small\">\r\n                <span className=\"mr-2\">\r\n                  <i className=\"fas fa-circle text-primary\"></i>팔로워\r\n          </span>\r\n                <span className=\"mr-2\">\r\n                  <i className=\"fas fa-circle text-success\"></i>구독자\r\n          </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function ModeratorModePage() {\r\n  return (\r\n    <PageWrapper selectedClass=\"moderator-mode-analytics\" topBarTitle=\"관리자 모드\">\r\n      <ModeratorModePageContent />\r\n    </PageWrapper>\r\n  )\r\n}\r\n","import React from 'react';\r\n//import TopBar from '../layout/TopBar';\r\n//import Sidebar from '../layout/Sidebar';\r\nimport PageWrapper from './PageWrapper';\r\n\r\n\r\n\r\nfunction MediaCreatorModePageContent() {\r\n  return (\r\n  <div className=\"container-fluid\">\r\n\r\n  {/* Page Heading */}\r\n  <div className=\"d-sm-flex align-items-center justify-content-between mt-4 mb-4\">\r\n    <h1 className=\"h3 mb-0 text-gray-800\">대시보드</h1>\r\n    <input type=\"file\" name=\"inputfile\" id=\"inputfile\"/> \r\n    <a href=\"https://id.twitch.tv/oauth2/authorize?response_type=token&client_id=59x8jyaudw3pnyi722x3e2x9awh385&redirect_uri=https://c-rainbow.github.io/twitch-analyzer-login/oauth/redirect/intentionally_long_directory_name/to_hide_token_in_address_bar/still_need_to_add_more_characters/but_I_dont_know_what_else_to_say/I_will_just_generate_some_random_string/rsnxh6cjm08oefbznda54mgce1lfi89oa3gw6lr6/ha5daayx8au6tosio9evov7x1s2qejxzu0uaqvzn/lxj71wviygdkcwb09y14rkiiv0rgap1n52h07zkm/pyfurq9t674cghvbn2fxdrpvnr3vobypy2z1mp8l/login.html\"\r\n    className=\"d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm twitch-login-button\">\r\n    <i className=\"fas fa-download fa-sm text-white-50\"></i> 트위치 로그인\r\n    </a>\r\n  </div>\r\n  \r\n  <div className=\"row\">\r\n    {/* Chat filter area */}\r\n    <div className=\"col-xl-12 col-lg-12\">\r\n    <div className=\"card shadow mb-4\">\r\n      <div className=\"row\">\r\n      <div className=\"col-3\"></div>\r\n      <div className=\"col-6\">\r\n        <div className=\"card-body\">\r\n        {/* Content Search */}\r\n        <form className=\"d-block-inline ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n          <div className=\"input-group\">\r\n          <input type=\"text\" id=\"filter-text-input\" className=\"form-control bg-light border-0 small\"\r\n              placeholder=\"필터\" aria-label=\"Search\" aria-describedby=\"basic-addon2\"/>\r\n          <div className=\"input-group-append\">\r\n            <button className=\"btn btn-primary\" type=\"button\" id=\"filter-button\">\r\n            <i className=\"fas fa-search fa-sm\"></i>\r\n            </button>\r\n          </div>\r\n          </div>\r\n        </form>\r\n        </div>\r\n\r\n      </div>\r\n      <div className=\"col-3\"></div>\r\n      </div>\r\n      <div className=\"row\">\r\n      <div className=\"col-12 m-2\">\r\n        <span className=\"ml-4 mr-2\">최근 사용한 필터:</span>\r\n        <span className=\"ml-1 mr-1\">\r\n        <button type=\"button\" className=\"btn btn-outline-success\">\r\n          비구독자<i className=\"fas fa-times ml-1\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        </span>\r\n        <span className=\" ml-1 mr-1\">\r\n        <button type=\"button\" className=\"btn btn-outline-success\">\r\n          아이디 major_trihard &amp; 생성일 1일 미만\r\n          <i className=\"fas fa-times ml-1\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        </span>\r\n        <span className=\" ml-1 mr-1\">\r\n        <button type=\"button\" className=\"btn btn-outline-success\">\r\n          별 의미 없는 필터\r\n          <i className=\"fas fa-times ml-1\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        </span>\r\n      </div>\r\n      </div>\r\n      {/*<div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n      <h6 className=\"m-0 font-weight-bold text-primary\">채팅 필터</h6>\r\n      </div>*/}\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n  {/* Content Row */}\r\n  <div className=\"row\">   \r\n\r\n    {/* Chatter Count Card Example */}\r\n    <div className=\"col-xl-3 col-md-6 mb-4\">\r\n    <div className=\"card border-left-primary shadow h-100 py-2\">\r\n      <div className=\"card-body\">\r\n      <div className=\"row no-gutters align-items-center\">\r\n        <div className=\"col mr-2\">\r\n        <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">채팅 친 사람 수</div>\r\n        <div className=\"h5 mb-0 font-weight-bold text-gray-800 chatter-count-content\">39명</div>\r\n        </div>\r\n        <div className=\"col-auto\">\r\n        <i className=\"fas fa-bread-slice fa-2x text-gray-300\"></i>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n\r\n    {/* Chat Count Card Example */}\r\n    <div className=\"col-xl-3 col-md-6 mb-4\">\r\n    <div className=\"card border-left-success shadow h-100 py-2\">\r\n      <div className=\"card-body\">\r\n      <div className=\"row no-gutters align-items-center\">\r\n        <div className=\"col mr-2\">\r\n        <div className=\"text-xs font-weight-bold text-success text-uppercase mb-1\">전체 채팅 수</div>\r\n        <div className=\"h5 mb-0 font-weight-bold text-gray-800 comment-count-content\">480개</div>\r\n        </div>\r\n        <div className=\"col-auto\">\r\n        <i className=\"fas fa-comments fa-2x text-gray-300\"></i>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n\r\n    {/* Stream Time Example */}\r\n    <div className=\"col-xl-3 col-md-6 mb-4\">\r\n    <div className=\"card border-left-info shadow h-100 py-2\">\r\n      <div className=\"card-body\">\r\n      <div className=\"row no-gutters align-items-center\">\r\n        <div className=\"col mr-2\">\r\n        <div className=\"text-xs font-weight-bold text-info text-uppercase mb-1\">총 비트</div>\r\n        <div className=\"h5 mb-0 mr-3 font-weight-bold text-gray-800 total-bits-content\">491개</div>\r\n        </div>\r\n        <div className=\"col-auto\">\r\n        <i className=\"fas fa-clipboard-list fa-2x text-gray-300\"></i>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n\r\n    {/* Random Info Card Example */}\r\n    <div className=\"col-xl-3 col-md-6 mb-4\">\r\n    <div className=\"card border-left-warning shadow h-100 py-2\">\r\n      <div className=\"card-body\">\r\n      <div className=\"row no-gutters align-items-center\">\r\n        <div className=\"col mr-2\">\r\n        <div className=\"text-xs font-weight-bold text-warning text-uppercase mb-1\">구독 알림</div>\r\n        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">2명</div>\r\n        </div>\r\n        <div className=\"col-auto\">\r\n        <i className=\"fas fa-comments fa-2x text-gray-300\"></i>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n  {/* Content Row */}\r\n\r\n  <div className=\"row\">\r\n\r\n    {/* Area Chart */}\r\n    <div className=\"col-xl-12 col-lg-12 mb-4\">\r\n      <div className=\"card shadow\">\r\n      {/* Card Header - Dropdown */}\r\n      {/*<a href=\"#collapse-chat-count\" className=\"d-block card-header py-3\" data-toggle=\"collapse\"\r\n        role=\"button\" aria-expanded=\"true\" aria-controls=\"collapse-chat-count\">*/}\r\n      {/*</a>*/}\r\n      {/* Card Body */}\r\n      <div className=\"collapse show\" id=\"collapse-chat-count\">\r\n      <div className=\"card-body\">\r\n        <div className=\"chart-area\">\r\n        <canvas id=\"top-chatter-chart-canvas\"></canvas>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  {/* Content Row */}\r\n  <div className=\"row\">\r\n\r\n\r\n    {/* Content Column */}\r\n    <div className=\"col-xl-12 col-lg-12 mb-4\">\r\n\r\n    {/* Project Card Example */}\r\n    <div className=\"card shadow mb-12\">\r\n      <div className=\"card-header py-3\">\r\n      <h6 className=\"m-0 font-weight-bold text-primary\">이모티콘 통계</h6>\r\n      </div>\r\n      <div className=\"card-body\">\r\n      <div className=\"chart-bar\">\r\n        <canvas id=\"top-emote-chart-canvas\"></canvas>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n\r\n  {/* Search bar row */}\r\n  <div className=\"row\">\r\n    {/* Chat filter area */}\r\n    <div className=\"col-xl-4 col-lg-5\">\r\n    <div className=\"card shadow mb-4\">\r\n      <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n      <h6 className=\"m-0 font-weight-bold text-primary\">채팅 필터</h6>\r\n      </div>\r\n      <div className=\"card-body\">\r\n      {/* Content Search */}\r\n      <form className=\"d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search\">\r\n        <div className=\"input-group\">\r\n        <input type=\"text\" className=\"form-control bg-light border-0 small\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\"/>\r\n        <div className=\"input-group-append\">\r\n          <button className=\"btn btn-primary\" type=\"button\">\r\n          <i className=\"fas fa-search fa-sm\"></i>\r\n          </button>\r\n        </div>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    {/* Filtered chat area */}\r\n    <div className=\"col-xl-8 col-lg-7\">\r\n    <div className=\"card shadow mb-4\">\r\n      <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n      <h6 className=\"m-0 font-weight-bold text-primary\">검색 결과</h6>\r\n      </div>\r\n      <div className=\"card-body\">\r\n      <div className=\"chart-pie pt-4 pb-2\">\r\n        <canvas id=\"myPieChart\"></canvas>\r\n      </div>\r\n      <div className=\"mt-4 text-center small\">\r\n        <span className=\"mr-2\">\r\n        <i className=\"fas fa-circle text-primary\"></i>팔로워\r\n        </span>\r\n        <span className=\"mr-2\">\r\n        <i className=\"fas fa-circle text-success\"></i>구독자\r\n        </span>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  </div>\r\n   )\r\n}\r\n\r\n\r\nexport default function MediaCreatorModePage() {\r\n  return (\r\n    <PageWrapper selectedClass=\"media-creator-mode-analytics\" topBarTitle=\"편집자 모드\">\r\n        <MediaCreatorModePageContent />\r\n    </PageWrapper>\r\n  )\r\n}\r\n","import { setAccessToken } from \"../loginUtil\";\r\n\r\n\r\nexport default function LoginRedirectionPage(props) {\r\n  let hash = window.location.hash;\r\n  window.location.hash = \"\";       \r\n  if(hash.startsWith(\"#\")) {\r\n    hash = hash.slice(1);\r\n  }\r\n\r\n  const pairs = hash.split(\"&\");\r\n  for(const pair of pairs) {\r\n    const splited = pair.split(\"=\");\r\n    if(splited[0] === \"access_token\") {\r\n      setAccessToken(splited[1]);\r\n    }\r\n  }\r\n  window.location.replace(\"/\");\r\n}","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport DownloaderPage from './page/DownloaderPage';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Footer from './layout/Footer';\r\nimport StreamerModePage from './page/StreamerModePage';\r\nimport ModeratorModePage from './page/ModeratorModePage';\r\nimport MediaCreatorModePage from './page/MediaCreatorModePage';\r\nimport LoginRedirectionPage from './page/LoginRedirectionPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      {/* Page Wrapper */}\r\n      <Switch>\r\n        <Route exact path=\"/react-test\" children={StreamerModePage} />\r\n        <Route path=\"/react-test/downloader\" children={DownloaderPage} />\r\n        <Route path=\"/react-test/analytics/streamer\" children={StreamerModePage} />\r\n        <Route path=\"/react-test/analytics/moderator\" children={ModeratorModePage} />\r\n        <Route path=\"/react-test/analytics/media-creator\" children={MediaCreatorModePage} />\r\n        <Route path=\"/react-test/dev/login\" children={LoginRedirectionPage} />\r\n      </Switch>\r\n      {/* End of Page Wrapper */}\r\n\r\n      {/* Logout Modal */}\r\n      <div className=\"modal fade\" id=\"logoutModal\" tabIndex=\"-1\" role=\"dialog\"\r\n          aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ready to Leave?</h5>\r\n              <button className=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">×</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">Select \"Logout\" below if you are ready to end your current session.</div>\r\n            <div className=\"modal-footer\">\r\n              <a className=\"btn btn-primary\" href=\"login.html\">Logout</a>\r\n              <button className=\"btn btn-secondary\" type=\"button\" data-dismiss=\"modal\">Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Footer */}\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}